@page "/weather"
@using EShopAzure.PublicApi.ExternalApi
@using EShopAzure.PublicApi.ExternalApi.Models
@attribute [StreamRendering]
@inject IEShopAzureWebApi eshopApi

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (loading)
{
    <p><em>Loading...</em></p>
}
else
{
    if (error)
    {
        <p>Failed to obtain data</p>
        <p>@errorMsg</p>
    }
    else if(@forecasts != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    }

}

@code {
    private WeatherForecast[]? forecasts;
    private bool loading = true;
    private bool error = false;
    private string errorMsg = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            forecasts = await eshopApi.GetWeatherForecast();

        }
        catch (Exception ex)
        {
            errorMsg = ex.Message;
            error = true;
        }
        finally
        {
            loading = false;
        }
    }
}
